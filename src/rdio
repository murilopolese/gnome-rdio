#!/usr/bin/gjs

const Lang = imports.lang;
const GLib = imports.gi.GLib;
const Gtk = imports.gi.Gtk;
const WebKit = imports.gi.WebKit;
const Soup = imports.gi.Soup;

// This folder should be created on app install. The expected files are
// cookies,txt and rdio-icon.png
const RDIO_USER_DATA = GLib.get_user_data_dir() + '/rdio';

const Application = new Lang.Class({
    Name: 'Application',
    _init: function() {
        this.application = new Gtk.Application();
        this.application.connect('activate', Lang.bind(this, this._onActivate));
        this.application.connect('startup', Lang.bind(this, this._onStartup));
    },
    _buildUI: function() {
        // Application main window
        this._window = new Gtk.ApplicationWindow({ 
            application: this.application,
            title: "Rdio" 
        });
        this._window.set_default_size(800, 600);
        // Scrollable container
        let sw = new Gtk.ScrolledWindow({});
        this._window.add(sw);
        // Web view
        let view = new WebKit.WebView();
        view.load_uri('https://rdio.com');
        sw.add(view);
        // Cookies persistance
        let session = WebKit.get_default_session();
        let cookies = new Soup.CookieJarText({
            filename: RDIO_USER_DATA + '/cookies.txt'
        });
        cookies.set_accept_policy(Soup.CookieJarAcceptPolicy.ALWAYS);
        cookies.attach(session);
        // System tray icon
        let tray = new Gtk.StatusIcon();
        tray.file = RDIO_USER_DATA + '/rdio-icon.png';
        tray.connect('activate', Lang.bind(this, this._toggleWindowVisibility));

        print(GLib.get_user_data_dir())
    },
    _onActivate: function() {
        this._window.show_all();
    },
    _onStartup: function() {
        this._buildUI();
    },
    _toggleWindowVisibility: function() {
        if(this._window.visible) {
            this._window.hide();
        } else {
            this._window.show_all();
        }
    }
});

//run the application
let app = new Application();
app.application.run(ARGV);